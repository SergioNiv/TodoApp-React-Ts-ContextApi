{"version":3,"sources":["context/TodoContext.tsx","components/TodoAdd.tsx","components/TodoList.tsx","reducer/todoReducer.ts","context/TodoProvider.tsx","TodoApp.tsx","index.tsx"],"names":["TodoContext","createContext","TodoAdd","useContext","AddNewTodo","todoState","useState","formValue","setFormValue","countToggle","todos","filter","todo","completed","length","localStorage","setItem","JSON","stringify","onSubmit","e","preventDefault","trim","name","type","placeholder","className","onChange","target","value","TodoList","toggleTodo","deleteTodo","style","textAlign","fontSize","display","map","idx","cursor","textDecoration","onClick","todoReducer","state","action","payload","INITAL_State","parse","getItem","TodoProvider","children","useReducer","dispatch","Provider","TodoApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMASaA,EAAcC,wBAC1B,I,OCPYC,EAAU,WACtB,MAAkCC,qBAAWH,GAArCI,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UACpB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAcJ,EAAUK,MAAMC,QACnC,SAACC,GAAD,OAA6B,IAAnBA,EAAKC,aACdC,OAEFC,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUb,EAAUK,QAc9D,OACC,uBAAMS,SATc,SAACC,GACrBA,EAAEC,iBACEd,EAAUe,OAAOR,OAAS,IAC7BV,EAAW,CAAEmB,KAAMhB,EAAWM,WAAW,IACzCL,EAAa,MAKd,UACC,4CACYC,EADZ,OAC6BJ,EAAUK,MAAMI,OAD7C,kBAGA,uBACA,sDACA,uBACCU,KAAK,OACLC,YAAY,QACZC,UAAU,0BACVC,SAvBoB,SAACP,GACvBZ,EAAaY,EAAEQ,OAAOC,QAuBpBA,MAAOtB,IAGR,wBAAQiB,KAAK,SAASE,UAAU,wBAAhC,iCCrCUI,EAAW,WACvB,MAA8C3B,qBAAWH,GAAjDK,EAAR,EAAQA,UAAW0B,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,WACvBtB,EAAUL,EAAVK,MAER,OACC,sBAAKgB,UAAU,OAAOO,MAAO,CAAEC,UAAW,QAA1C,UACC,sBAAMD,MAAO,CAAEE,SAAU,OAAQC,QAAS,SAAWV,UAAU,OAA/D,mEAGChB,EAAM2B,KAAI,SAACzB,EAAM0B,GAAP,OACV,qBAECL,MAAO,CACNM,OAAQ,UACRC,eAAgB5B,EAAKC,UAAY,eAAiB,IAEnDa,UAAU,OANX,UAQC,wBACCA,UAAU,sBACVe,QAAS,kBAAMT,EAAWpB,EAAKW,OAFhC,oBAMA,sBAAMkB,QAAS,kBAAMV,EAAWnB,EAAKW,OAArC,SAA6CX,EAAKW,SAb7Ce,U,cCPGI,EAAc,SAC1BC,EACAC,GAEA,OAAQA,EAAOpB,MACd,IAAK,UACJ,OAAO,2BACHmB,GADJ,IAECjC,MAAM,GAAD,mBAAMiC,EAAMjC,OAAZ,CAAmBkC,EAAOC,YAGjC,IAAK,aACJ,OAAO,2BACHF,GADJ,IAECjC,MAAOiC,EAAMjC,MAAM2B,KAAI,YAAkB,IAAZzB,EAAW,oBAIvC,OAHIA,EAAKW,OAASqB,EAAOC,QAAQtB,OAChCX,EAAKC,WAAaD,EAAKC,WAEjBD,OAIV,IAAK,aACJ,OAAO,2BACH+B,GADJ,IAECjC,MAAOiC,EAAMjC,MAAMC,QAAO,SAACC,GAAD,OAAUA,EAAKW,OAASqB,EAAOC,QAAQtB,UAGnE,QACC,OAAOoB,IC/BJG,EAA0B,CAC/BpC,MAAOO,KAAK8B,MAAMhC,aAAaiC,QAAQ,kBAAqB,IAOhDC,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAC9B,EAA8BC,qBAAWT,EAAaI,GAAtD,mBAAOzC,EAAP,KAAkB+C,EAAlB,KAcA,OACC,cAACpD,EAAYqD,SAAb,CACCxB,MAAO,CAAExB,YAAWD,WAdH,SAACQ,GACnBwC,EAAS,CAAE5B,KAAM,UAAWqB,QAASjC,KAaJmB,WAVf,SAACR,GACnB6B,EAAS,CAAE5B,KAAM,aAAcqB,QAAS,CAAEtB,WASGS,WAN3B,SAACT,GACnB6B,EAAS,CAAE5B,KAAM,aAAcqB,QAAS,CAAEtB,YAI1C,SAGC,8BAAM2B,OChBMI,MAXf,WACC,OACC,cAAC,EAAD,UACC,sBAAK5B,UAAU,sBAAf,UACC,cAAC,EAAD,IACA,cAAC,EAAD,UCLJ6B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.24e6dd70.chunk.js","sourcesContent":["import { createContext } from 'react';\nimport { Todo, TodoState } from '../interfaces/interfaces';\n\nexport type TodoContextProps = {\n\ttodoState: TodoState;\n\tAddNewTodo: (todo: Todo) => void;\n\ttoggleTodo: (name: string) => void;\n\tdeleteTodo: (name: string) => void;\n};\nexport const TodoContext = createContext<TodoContextProps>(\n\t{} as TodoContextProps\n);\n","import { ChangeEvent, FormEvent, useContext, useState } from 'react';\nimport { TodoContext } from '../context/TodoContext';\n\nexport const TodoAdd = () => {\n\tconst { AddNewTodo, todoState } = useContext(TodoContext);\n\tconst [formValue, setFormValue] = useState('');\n\n\tconst countToggle = todoState.todos.filter(\n\t\t(todo) => todo.completed === true\n\t).length;\n\n\tlocalStorage.setItem('todosStorage', JSON.stringify(todoState.todos));\n\n\tconst handleOnchange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetFormValue(e.target.value);\n\t};\n\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n\t\te.preventDefault();\n\t\tif (formValue.trim().length > 0) {\n\t\t\tAddNewTodo({ name: formValue, completed: false });\n\t\t\tsetFormValue('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<h1>\n\t\t\t\tTodo App: {countToggle} de {todoState.todos.length} completados\n\t\t\t</h1>\n\t\t\t<hr />\n\t\t\t<label>Escribe tu tarea:</label>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Tarea\"\n\t\t\t\tclassName=\"form form-control mt-2 \"\n\t\t\t\tonChange={handleOnchange}\n\t\t\t\tvalue={formValue}\n\t\t\t/>\n\n\t\t\t<button type=\"submit\" className=\"btn btn-success mt-4 \">\n\t\t\t\tAÃ±adir tarea\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n","import { useContext } from 'react';\nimport { TodoContext } from '../context/TodoContext';\n\nexport const TodoList = () => {\n\tconst { todoState, toggleTodo, deleteTodo } = useContext(TodoContext);\n\tconst { todos } = todoState;\n\n\treturn (\n\t\t<div className=\"mt-5\" style={{ textAlign: 'left' }}>\n\t\t\t<span style={{ fontSize: '1rem', display: 'block' }} className=\"mb-3\">\n\t\t\t\tPresiona sobre la tarea para marcarla como completada\n\t\t\t</span>\n\t\t\t{todos.map((todo, idx) => (\n\t\t\t\t<li\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\t\ttextDecoration: todo.completed ? 'line-through' : '',\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"mt-2\"\n\t\t\t\t>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-danger me-3\"\n\t\t\t\t\t\tonClick={() => deleteTodo(todo.name)}\n\t\t\t\t\t>\n\t\t\t\t\t\tBorrar\n\t\t\t\t\t</button>\n\t\t\t\t\t<span onClick={() => toggleTodo(todo.name)}>{todo.name}</span>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import { Todo, TodoState } from '../interfaces/interfaces';\n\ntype typeACtion =\n\t| { type: 'todoAdd'; payload: Todo }\n\t| { type: 'toggleTodo'; payload: { name: string } }\n\t| { type: 'deleteTodo'; payload: { name: string } };\n\nexport const todoReducer = (\n\tstate: TodoState,\n\taction: typeACtion\n): TodoState => {\n\tswitch (action.type) {\n\t\tcase 'todoAdd':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: [...state.todos, action.payload],\n\t\t\t};\n\n\t\tcase 'toggleTodo':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.map(({ ...todo }) => {\n\t\t\t\t\tif (todo.name === action.payload.name) {\n\t\t\t\t\t\ttodo.completed = !todo.completed;\n\t\t\t\t\t}\n\t\t\t\t\treturn todo;\n\t\t\t\t}),\n\t\t\t};\n\n\t\tcase 'deleteTodo':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.filter((todo) => todo.name !== action.payload.name),\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { useReducer } from 'react';\nimport { Todo, TodoState } from '../interfaces/interfaces';\nimport { todoReducer } from '../reducer/todoReducer';\nimport { TodoContext } from './TodoContext';\n\nconst INITAL_State: TodoState = {\n\ttodos: JSON.parse(localStorage.getItem('todosStorage')!) || [],\n};\n\ninterface props {\n\tchildren: JSX.Element | JSX.Element[];\n}\n\nexport const TodoProvider = ({ children }: props) => {\n\tconst [todoState, dispatch] = useReducer(todoReducer, INITAL_State);\n\n\tconst AddNewTodo = (todo: Todo) => {\n\t\tdispatch({ type: 'todoAdd', payload: todo });\n\t};\n\n\tconst toggleTodo = (name: string) => {\n\t\tdispatch({ type: 'toggleTodo', payload: { name } });\n\t};\n\n\tconst deleteTodo = (name: string) => {\n\t\tdispatch({ type: 'deleteTodo', payload: { name } });\n\t};\n\n\treturn (\n\t\t<TodoContext.Provider\n\t\t\tvalue={{ todoState, AddNewTodo, toggleTodo, deleteTodo }}\n\t\t>\n\t\t\t<div>{children}</div>\n\t\t</TodoContext.Provider>\n\t);\n};\n","import './App.css';\nimport { TodoAdd } from './components/TodoAdd';\nimport { TodoList } from './components/TodoList';\nimport { TodoProvider } from './context/TodoProvider';\n\nfunction TodoApp() {\n\treturn (\n\t\t<TodoProvider>\n\t\t\t<div className=\"App-header App p-5 \">\n\t\t\t\t<TodoAdd />\n\t\t\t\t<TodoList />\n\t\t\t</div>\n\t\t</TodoProvider>\n\t);\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<TodoApp />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}